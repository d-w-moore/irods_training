#!/bin/bash
DIR=$(dirname "$0")
PATH_TO_COMPUTE=~irods/compute
singularity="/usr/local/bin/singularity"

. "${PATH_TO_COMPUTE}"/singularity_images.conf

subcommand="$1"; shift

get_vault_for_resc() {
  iquest %s "select RESC_VAULT_PATH where RESC_NAME = '$1'"; 
}

[ -z "$subcommand" ] && {
  echo $'\n\t'"== Local singularity images index =="$'\n'
  for key in ${!Singularity_Sources[*]}; do
    echo "$key"$'\t\t'"${Singularity_Sources[$key]}"
  done
  echo $'\n'
  exit 0
} >&2

if [ $subcommand = "nop" ] ; then
  exit 0
fi

pull_image() {  
   local FORCE_FLAG=0
   [ "$2" = "-f" ] && { FORCE_FLAG=1;  }
   [ -n "$1" ] && [[ $1 != */* ]] || return 2; 
   local TGT="${PATH_TO_COMPUTE}/$1.simg"
   echo "$TGT - being pulled. " >&2
   if [ "$FORCE_FLAG" -ne 0 -o ! -f "$TGT" ]  ; then
       SOURCE="${Singularity_Sources[$1]}" 
       [ -n "$SOURCE" ] || { echo -n "image URI not found, try:" 
         echo " shub://... or docker://... " >&2 ; return 1 ; }
       echo  $'\t using '"'$SOURCE'" >&2
       echo  $'\t (please wait ...)' >&2
       ( [ "$FORCE_FLAG" -ne 0 ] && rm -f "$TGT"
         cd "$DIR"
         ${singularity} pull --force --name $(basename "$TGT") "$SOURCE" && \
         [ ! -f "$TGT" ] && mv $(basename "$TGT") "$PATH_TO_COMPUTE"/.
       ) >/dev/null 2>&1
       echo  >&2 # carriage return
   else
       echo  $'\t already exists' >&2
   fi
}

case "$1" in 

  metadata_addtags)

    case "$subcommand" in 

      pull) pull_image $1 $2 ;;

      exec) IMAGE="$1" ; shift 

	cd "${PATH_TO_COMPUTE}"
        ${singularity} run "$IMAGE".simg "$@"

    esac
  ;;

  thumbnail_image)

    case $subcommand in

      pull) pull_image $1 $2 ;;

      exec) IMAGE="$1" ; shift
        # ----------------------------------------------------
        # for security's sake, vet names of directories being 
        #    '--bind'ed to /src and /dst

        resc_vault=""

        while [ "$1" = --resc_for_bind ] ; do 
          [ -n "$2" ] && resc_vault=$(get_vault_for_resc "$2")
          shift 2
        done

        dir_bind_opts="" 

        while [ "$1" = --bind ] ; do 
          if [[ ( $resc_vault != "" && $2 == $resc_vault/*:/src ) ||
                ( $2 == /tmp/*:/dst )
          ]]
          then
                dir_bind_opts+=" $1 $2 "
          fi
          shift 2
        done

        cd "${PATH_TO_COMPUTE}" 

        #-- docker - inherited container; use specific python binary and scriptname

	if [[ $1 = /usr/*/python3 && $2 = /make_thumbnail.py ]]; then
	  shift 2
	  ${singularity} exec -c $dir_bind_opts "$IMAGE".simg \
            '/usr/local/bin/python3' '/make_thumbnail.py' "$1" "/src/$2" "/dst/$3" "$4"
        else
            ## -- uncomment the below for debugging only (not secure for production!)
	    # echo "RUNNING /bin/bash - in SINGULARITY : ($IMAGE.simg)" >&2 
            # ${singularity} exec -c $dir_bind_opts "$IMAGE".simg "/bin/bash"
          exit 1
	fi
      ;;
    esac
  ;;

  #-- invalid image name
  *) exit 2 ;;

esac
